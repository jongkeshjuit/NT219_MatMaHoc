{
    "version": "2.0.0",
    "tasks": [
        // =============================CRYPTOPP++ BUILD TASKS=============================
        {
            "type": "cppbuild",
            "label": "Build Executable with GCC",
            "command": "C:\\msys64\\mingw64\\bin\\g++.exe",
            "args": [
                "-g2",
                "-O3",
                "-DNDEBUG",
                "${file}",
                "-o",
                "${fileDirname}\\gcc\\${fileBasenameNoExtension}_gcc.exe",
                "-D_WIN32_WINNT=0x0501",
                "-lpthread",
                "-L${workspaceFolder}\\lib\\cryptopp\\gcc",
                "-lcryptopp",
                "-I${workspaceFolder}\\include\\cryptopp",
                "-Wall",
                "-std=c++17"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: GCC",
            "options": {
                "cwd": "${fileDirname}"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "type": "shell",
            "label": "Build and Run Executable with GCC",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir gcc 2>nul & C:\\msys64\\mingw64\\bin\\g++.exe -g2 -O3 -DNDEBUG \"${file}\" -o \"${fileDirname}\\gcc\\${fileBasenameNoExtension}_gcc.exe\" -D_WIN32_WINNT=0x0501 -lpthread -L\"${workspaceFolder}\\lib\\cryptopp\\gcc\" -lcryptopp -I\"${workspaceFolder}\\include\\cryptopp\" -Wall -std=c++17 && cd /d \"${fileDirname}\\gcc\" && \"${fileBasenameNoExtension}_gcc.exe\""
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: GCC + Auto Run",
            "options": {
                "cwd": "${fileDirname}"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            }
        },
        {
            "type": "cppbuild",
            "label": "Build Executable with Clang",
            "command": "C:\\msys64\\mingw64\\bin\\clang++.exe",
            "args": [
                "-g2",
                "-O3",
                "-DNDEBUG",
                "${file}",
                "-o",
                "${fileDirname}\\clang\\${fileBasenameNoExtension}_clang.exe",
                "-D_WIN32_WINNT=0x0501",
                "-lpthread",
                "-L${workspaceFolder}\\lib\\cryptopp\\clang",
                "-lcryptopp",
                "-I${workspaceFolder}\\include\\cryptopp",
                "-Wall",
                "-std=c++17"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: Clang",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "shell",
            "label": "Build and Run Executable with Clang",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir clang 2>nul & C:\\msys64\\mingw64\\bin\\clang++.exe -g2 -O3 -DNDEBUG \"${file}\" -o \"${fileDirname}\\clang\\${fileBasenameNoExtension}_clang.exe\" -D_WIN32_WINNT=0x0501 -lpthread -L\"${workspaceFolder}\\lib\\cryptopp\\clang\" -lcryptopp -I\"${workspaceFolder}\\include\\cryptopp\" -Wall -std=c++17 && cd /d \"${fileDirname}\\clang\" && \"${fileBasenameNoExtension}_clang.exe\""
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: Clang + Auto Run",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "shell",
            "label": "Build Executable with MSVC",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir msvc 2>nul & cl.exe /MTd /GS /O2 /W4 /Zi /nologo /EHsc /std:c++17 /I\"${workspaceFolder}\\include\\cryptopp\" /Fo\"${fileDirname}\\msvc\\\" /Fd\"${fileDirname}\\msvc\\vc140.pdb\" \"${file}\" /link /OUT:\"${fileDirname}\\msvc\\${fileBasenameNoExtension}_msvc.exe\" /LIBPATH:\"${workspaceFolder}\\lib\\cryptopp\\msvc\" cryptlib.lib crypt32.lib ws2_32.lib /MACHINE:X64"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$msCompile"],
            "detail": "Compiler: MSVC",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "shell",
            "label": "Build and Run Executable with MSVC",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir msvc 2>nul & cl.exe /MTd /GS /O2 /W4 /Zi /nologo /EHsc /std:c++17 /I\"${workspaceFolder}\\include\\cryptopp\" /Fo\"${fileDirname}\\msvc\\\" /Fd\"${fileDirname}\\msvc\\vc140.pdb\" \"${file}\" /link /OUT:\"${fileDirname}\\msvc\\${fileBasenameNoExtension}_msvc.exe\" /LIBPATH:\"${workspaceFolder}\\lib\\cryptopp\\msvc\" cryptlib.lib crypt32.lib ws2_32.lib /MACHINE:X64 && cd /d \"${fileDirname}\\msvc\" && \"${fileBasenameNoExtension}_msvc.exe\""
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$msCompile"],
            "detail": "Compiler: MSVC + Auto Run",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        // =============================SHARED LIBRARY BUILD TASKS===========================
        {
            "type": "cppbuild",
            "label": "Build Shared Library with GCC",
            "command": "C:\\msys64\\mingw64\\bin\\g++.exe",
            "args": [
                "-shared",
                "-fPIC",
                "-g2",
                "-O3",
                "-DNDEBUG",
                "${file}",
                "-o",
                "${fileDirname}\\gcc\\${fileBasenameNoExtension}_gcc.dll",
                "-D_WIN32_WINNT=0x0501",
                "-lpthread",
                "-L${workspaceFolder}\\lib\\cryptopp\\gcc",
                "-lcryptopp",
                "-I${workspaceFolder}\\include\\cryptopp",
                "-Wall",
                "-std=c++17"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: GCC (Shared Library)",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "cppbuild",
            "label": "Build Shared Library with Clang",
            "command": "C:\\msys64\\mingw64\\bin\\clang++.exe",
            "args": [
                "-shared",
                "-fPIC",
                "-g2",
                "-O3",
                "-DNDEBUG",
                "${file}",
                "-o",
                "${fileDirname}\\clang\\${fileBasenameNoExtension}_clang.dll",
                "-D_WIN32_WINNT=0x0501",
                "-lpthread",
                "-L${workspaceFolder}\\lib\\cryptopp\\clang",
                "-lcryptopp",
                "-I${workspaceFolder}\\include\\cryptopp",
                "-Wall",
                "-std=c++17"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: Clang (Shared Library)",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "shell",
            "label": "Build Shared Library with MSVC",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir msvc 2>nul & cl.exe /MTd /GS /O2 /W4 /Zi /nologo /EHsc /std:c++17 /I\"${workspaceFolder}\\include\\cryptopp\" /Fo\"${fileDirname}\\msvc\\\" /Fd\"${fileDirname}\\msvc\\vc140.pdb\" \"${file}\" /link /DLL /OUT:\"${fileDirname}\\msvc\\${fileBasenameNoExtension}_msvc.dll\" /PDB:\"${fileDirname}\\msvc\\${fileBasenameNoExtension}_msvc.pdb\" /LIBPATH:\"${workspaceFolder}\\lib\\cryptopp\\msvc\" cryptlib.lib crypt32.lib ws2_32.lib /MACHINE:X64"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$msCompile"],
            "detail": "Compiler: MSVC (Shared Library)",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        // =============================OPENSSL BUILD TASKS================================
        {
            "type": "shell",
            "label": "Build with GCC + OpenSSL",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir gcc 2>nul & C:\\msys64\\mingw64\\bin\\g++.exe -g2 -O3 -DNDEBUG \"${file}\" -o \"${fileDirname}\\gcc\\${fileBasenameNoExtension}_openssl.exe\" -D_WIN32_WINNT=0x0501 -lpthread -L\"${workspaceFolder}\\openssl350\\gcc\\lib64\" -lssl -lcrypto -lcrypt32 -lws2_32 -I\"${workspaceFolder}\\openssl350\\gcc\\include\" -Wall -std=c++17"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: GCC with OpenSSL",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "shell",
            "label": "Build and Run with GCC + OpenSSL",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir gcc 2>nul & C:\\msys64\\mingw64\\bin\\g++.exe -g2 -O3 -DNDEBUG \"${file}\" -o \"${fileDirname}\\gcc\\${fileBasenameNoExtension}_openssl.exe\" -D_WIN32_WINNT=0x0501 -lpthread -L\"${workspaceFolder}\\openssl350\\gcc\\lib64\" -lssl -lcrypto -lcrypt32 -lws2_32 -I\"${workspaceFolder}\\openssl350\\gcc\\include\" -Wall -std=c++17 && cd /d \"${fileDirname}\\gcc\" && \"${fileBasenameNoExtension}_openssl.exe\""
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: GCC with OpenSSL + Auto Run",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "shell",
            "label": "Build with Clang + OpenSSL",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir clang 2>nul & C:\\msys64\\mingw64\\bin\\clang++.exe -g2 -O3 -DNDEBUG \"${file}\" -o \"${fileDirname}\\clang\\${fileBasenameNoExtension}_openssl.exe\" -D_WIN32_WINNT=0x0501 -lpthread -L\"${workspaceFolder}\\openssl350\\clang\\lib64\" -lssl -lcrypto -lcrypt32 -lws2_32 -I\"${workspaceFolder}\\openssl350\\clang\\include\" -Wall -std=c++17"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: Clang with OpenSSL",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "shell",
            "label": "Build and Run with Clang + OpenSSL",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir clang 2>nul & C:\\msys64\\mingw64\\bin\\clang++.exe -g2 -O3 -DNDEBUG \"${file}\" -o \"${fileDirname}\\clang\\${fileBasenameNoExtension}_openssl.exe\" -D_WIN32_WINNT=0x0501 -lpthread -L\"${workspaceFolder}\\openssl350\\clang\\lib64\" -lssl -lcrypto -lcrypt32 -lws2_32 -I\"${workspaceFolder}\\openssl350\\clang\\include\" -Wall -std=c++17 && cd /d \"${fileDirname}\\clang\" && \"${fileBasenameNoExtension}_openssl.exe\""
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: Clang with OpenSSL + Auto Run",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "shell",
            "label": "Build with MSVC + OpenSSL",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir msvc 2>nul & cl.exe /MTd /GS /O2 /W4 /Zi /nologo /EHsc /std:c++17 /I\"${workspaceFolder}\\openssl350\\msvc\\include\" /Fo\"${fileDirname}\\msvc\\\" /Fd\"${fileDirname}\\msvc\\vc140.pdb\" \"${file}\" /link /OUT:\"${fileDirname}\\msvc\\${fileBasenameNoExtension}_openssl.exe\" /LIBPATH:\"${workspaceFolder}\\openssl350\\msvc\\lib\" libssl.lib libcrypto.lib crypt32.lib ws2_32.lib /MACHINE:X64"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$msCompile"],
            "detail": "Compiler: MSVC with OpenSSL",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "shell",
            "label": "Build and Run with MSVC + OpenSSL",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir msvc 2>nul & cl.exe /MTd /GS /O2 /W4 /Zi /nologo /EHsc /std:c++17 /I\"${workspaceFolder}\\openssl350\\msvc\\include\" /Fo\"${fileDirname}\\msvc\\\" /Fd\"${fileDirname}\\msvc\\vc140.pdb\" \"${file}\" /link /OUT:\"${fileDirname}\\msvc\\${fileBasenameNoExtension}_openssl.exe\" /LIBPATH:\"${workspaceFolder}\\openssl350\\msvc\\lib\" libssl.lib libcrypto.lib crypt32.lib ws2_32.lib /MACHINE:X64 && cd /d \"${fileDirname}\\msvc\" && \"${fileBasenameNoExtension}_openssl.exe\""
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$msCompile"],
            "detail": "Compiler: MSVC with OpenSSL + Auto Run",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        // =============================OPENSSL SHARED======================================
        {
            "type": "cppbuild",
            "label": "Build Shared Library with GCC + OpenSSL",
            "command": "C:\\msys64\\mingw64\\bin\\g++.exe",
            "args": [
                "-shared",
                "-fPIC",
                "-g2",
                "-O3",
                "-DNDEBUG",
                "${file}",
                "-o",
                "${fileDirname}\\gcc\\${fileBasenameNoExtension}_openssl.dll",
                "-D_WIN32_WINNT=0x0501",
                "-lpthread",
                "-L${workspaceFolder}\\openssl350\\gcc\\lib64",
                "-lssl",
                "-lcrypto",
                "-lcrypt32",
                "-lws2_32",
                "-I${workspaceFolder}\\openssl350\\gcc\\include",
                "-Wall",
                "-std=c++17"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: GCC with OpenSSL (Shared Library)",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "cppbuild",
            "label": "Build Shared Library with Clang + OpenSSL",
            "command": "C:\\msys64\\mingw64\\bin\\clang++.exe",
            "args": [
                "-shared",
                "-fPIC",
                "-g2",
                "-O3",
                "-DNDEBUG",
                "${file}",
                "-o",
                "${fileDirname}\\clang\\${fileBasenameNoExtension}_openssl.dll",
                "-D_WIN32_WINNT=0x0501",
                "-lpthread",
                "-L${workspaceFolder}\\openssl350\\clang\\lib64",
                "-lssl",
                "-lcrypto",
                "-lcrypt32",
                "-lws2_32",
                "-I${workspaceFolder}\\openssl350\\clang\\include",
                "-Wall",
                "-std=c++17"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compiler: Clang with OpenSSL (Shared Library)",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "type": "shell",
            "label": "Build Shared Library with MSVC + OpenSSL",
            "command": "cmd",
            "args": [
                "/C",
                "mkdir msvc 2>nul & cl.exe /MTd /GS /O2 /W4 /Zi /nologo /EHsc /std:c++17 /I\"${workspaceFolder}\\openssl350\\msvc\\include\" /Fo\"${fileDirname}\\msvc\\\" /Fd\"${fileDirname}\\msvc\\vc140.pdb\" \"${file}\" /link /DLL /OUT:\"${fileDirname}\\msvc\\${fileBasenameNoExtension}_openssl.dll\" /PDB:\"${fileDirname}\\msvc\\${fileBasenameNoExtension}_openssl.pdb\" /LIBPATH:\"${workspaceFolder}\\openssl350\\msvc\\lib\" libssl.lib libcrypto.lib crypt32.lib ws2_32.lib /MACHINE:X64"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": ["$msCompile"],
            "detail": "Compiler: MSVC with OpenSSL (Shared Library)",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        // =============================C# BUILD TASKS======================================
        {
            "label": "build-csc",
            "type": "shell",
            "command": "csc.exe",
            "args": [
                "/nologo",
                "/debug+",
                "/optimize+",
                "/warn:4",
                "/langversion:latest",
                "${file}",
                "/out:${fileDirname}\\${fileBasenameNoExtension}_cs.exe"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": "$msCompile",
            "detail": "Build single .cs file using csc",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "label": "build-and-run-csc",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/C",
                "csc.exe /nologo /debug+ /optimize+ /warn:4 /langversion:latest \"${file}\" /out:\"${fileDirname}\\${fileBasenameNoExtension}_cs.exe\" && \"${fileDirname}\\${fileBasenameNoExtension}_cs.exe\""
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": "$msCompile",
            "detail": "Build and run single .cs file using csc",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        // =============================JAVA BUILD TASKS====================================
        {
            "label": "javac-compile",
            "type": "shell",
            "command": "javac",
            "args": [
                "-encoding",
                "UTF-8",
                "-cp",
                ".",
                "${file}"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "detail": "Compile Java file",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "label": "java-run",
            "type": "shell",
            "command": "java",
            "args": [
                "-cp",
                ".",
                "${fileBasenameNoExtension}"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "detail": "Run Java class",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        {
            "label": "java-compile-and-run",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/C",
                "javac -encoding UTF-8 -cp . \"${file}\" && java -cp . \"${fileBasenameNoExtension}\""
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "detail": "Compile and run Java file",
            "options": {
                "cwd": "${fileDirname}"
            }
        },
        // =============================JNI BUILD TASKS=====================================
        {
            "label": "jni-step1-compile-java",
            "type": "shell",
            "command": "javac",
            "args": [
                "-encoding",
                "UTF-8",
                "${fileBasenameNoExtension}.java"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "group": "build",
            "problemMatcher": [],
            "detail": "JNI Step 1: Compile Java file"
        },
        {
            "label": "jni-step2-generate-header",
            "type": "shell",
            "command": "javac",
            "args": [
                "-encoding",
                "UTF-8",
                "-h",
                ".",
                "${fileBasenameNoExtension}.java"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "group": "build",
            "problemMatcher": [],
            "detail": "JNI Step 2: Generate JNI header"
        },
        {
            "label": "jni-step3-compile-cpp",
            "type": "shell",
            "command": "C:\\msys64\\mingw64\\bin\\g++.exe",
            "args": [
                "-I\"E:\\jdk-11.0.27\\include\"",
                "-I\"E:\\jdk-11.0.27\\include\\win32\"",
                "-I\"${workspaceFolder}\\include\\cryptopp\"",
                "-shared",
                "-fPIC",
                "-o",
                "${fileBasenameNoExtension}Lib.dll",
                "${fileBasenameNoExtension}JNI.cpp",
                "-L\"${workspaceFolder}\\lib\\cryptopp\\gcc\"",
                "-lcryptopp",
                "-std=c++17"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "group": "build",
            "problemMatcher": ["$gcc"],
            "detail": "JNI Step 3: Compile C++ to DLL"
        },
        {
            "label": "jni-step4-run-java",
            "type": "shell",
            "command": "java",
            "args": [
                "--enable-native-access=ALL-UNNAMED",
                "-Djava.library.path=.",
                "${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "group": "build",
            "problemMatcher": [],
            "detail": "JNI Step 4: Run Java with native library"
        },
        // =============================JNI BUILD ALL IN ONE===============================
        {
            "label": "jni-build-and-run-all",
            "dependsOrder": "sequence",
            "dependsOn": [
                "jni-step1-compile-java",
                "jni-step2-generate-header",
                "jni-step3-compile-cpp",
                "jni-step4-run-java"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "detail": "JNI: Build và chạy tất cả (Compile Java → Generate Header → Compile C++ → Run)",
            "problemMatcher": []
        },
        // =============================QUICK BUILD MENU====================================
        {
            "label": "Quick Build Menu",
            "type": "shell",
            "command": "echo",
            "args": ["Available build tasks - Use Ctrl+Shift+P and search for 'Tasks: Run Build Task'"],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "detail": "Show available build options",
            "problemMatcher": []
        }
    ]
}